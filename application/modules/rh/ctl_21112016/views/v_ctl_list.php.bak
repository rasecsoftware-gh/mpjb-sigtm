<script>
	ctl.panel = Ext.create('Ext.Panel', {
		region: 'center',
		layout: 'border',
		items: [{
			xtype: 'grid',
			id:'ctl_main_grid',
			region:'center', split:true, 
			//forceFit:true,
			sortableColumns: false,
			enableColumnHide: false,
			columns:[
				{text:'Codigo', dataIndex:'traba_cod', width: 80},
				{text:'DNI', dataIndex:'traba_dni', width: 70},
				{text:'Nombres y Apellidos', dataIndex:'traba_nomape', width: 210},
				{text:'Ubigeo', dataIndex:'traba_ubigeo', width: 80},
				{text:'RL', dataIndex:'reglab_cod', width: 45},
				//{text:'TC', dataIndex:'sunat_tipo_contrato_cod', width: 45},
				{text:'Activo', dataIndex:'traba_activo', width: 70},
				//{text:'Planillas', dataIndex:'planilla_count', width: 60},
				//{text:'Servicios', dataIndex:'servicio_count', width: 65},
<?php
	$m = date('n'); // mes actual
	$mes = array('','Ene','Feb','Mar','Abr','May','Jun','Jul','Ago','Set','Oct','Nov','Dic');
	$y = '';
	$w = 45;
	for ($i=1; $i<=13; $i++) {
		if ($m<1) {
			$m = 12;
			$y = ((date('Y')-1)-2000);
			$w = 45 + 7;
		}
		echo "{text:'{$mes[$m]}{$y}', dataIndex:'p{$i}', width: {$w}, 
				renderer: function (value, metaData, record) {
				    // evaluate the record's `updated` field and if truthy return the value 
				    // from the `newVal` field, else return value
				    metaData.tdStyle = 'font-size: 6pt';
				    return value;
				}},\n";
		$m--;
	}
?>				
				{text:'MesesLab', dataIndex:'meses_lab', width: 75}

			],
			tbar:[{
				text:'Imprimir', handler: function() {
					ctl.print_window();
				}
			},{
				text:'Actualizar', handler: function() {
					ctl.main_store.reload({
						params: {
							search_ubig: Ext.getCmp('ctl_cb_search_ubig').getValue(),
							search_todos: Ext.getCmp('ctl_chb_search_todos').getValue(),
							search_activos: Ext.getCmp('ctl_chb_search_activos').getValue(),
						}
					});
				}
			},{
				text:'Excel', handler: function(){
					Ext.Ajax.request({
					url: 'ctl/getExcel',
					method: 'POST',
					params: {
						rkey: ctl.rkey,
					},
					success: function(data, response){
						var resp=JSON.parse(data.responseText);
						var a = document.createElement("a");
						a.href = resp.file;
						a.download = resp.name;
						document.body.appendChild(a);
						a.click();
					}
				});
			  }
			},'->',{
        xtype:'checkbox',
        id:'ctl_chb_search_todos',
        name:'search_todos',
        value:'all',
        boxLabel:'Mostrar todos',
		disabled:true,
      },{
        xtype:'checkbox',
        id:'ctl_chb_search_activos',
        name:'search_activos',
        checked:true,
        boxLabel:'Activos',
		disabled:true,
      },{
				xtype:'combobox',
				id: 'ctl_cb_search_ubig',
				displayField: 'ubigeo_desc',
				valueField: 'ubigeo_id',
				name: 'search_ubig',
				value: 'all',
				store: Ext.create('Ext.data.Store', {
					data : [
						{ubigeo_id: 'all', ubigeo_desc: 'Ubigeo: Todos'},
						{ubigeo_id: 'locumba', ubigeo_desc: 'Solo Locumba'},
						{ubigeo_id: 'notLocumba', ubigeo_desc: 'No Locumba'}
					]
				})
			},/*,{
				xtype:'combobox',
				id: 'ctl_cb_search_by',
				displayField: 'search_desc',
				valueField: 'search_id',
				name: 'search_by',
				value: 'all',
				store: Ext.create('Ext.data.Store', {
					data : [
						{search_id: 'all', search_desc: 'Busqueda General'},
						{search_id: 'traba_dni', search_desc: 'Por DNI'},
						{search_id: 'traba_desc', search_desc: 'Por Descripcion'}
					]
				})
			},{
				xtype:'textfield',
				id: 'ctl_search_text',
				enableKeyEvents: true,
				listeners: {
					keypress: function(sender, e, eOpts) {
						if (e.getKey() == e.ENTER) {
							Ext.getCmp('ctl_search_bt').click(e);
						}
					}
				}
			},{
				id: 'ctl_search_bt',
				text:'Buscar', handler: function() {
					ctl.main_store.reload({
						params: {
							search_by: Ext.getCmp('ctl_cb_search_by').getValue(),
							search_text: Ext.getCmp('ctl_search_text').getValue()
						}
					});
				}
			}*/],
			store: ctl.main_store,
			dockedItems: [{
		        xtype: 'pagingtoolbar',
		        store: ctl.main_store, // same store GridPanel is using
		        dock: 'bottom',
		        displayInfo: true
		    }],
			listeners:{
				select: function(ths, record, index, eOpts ) {
					ctl.planilla_store.reload({
						params: {
		    				traba_cod: record.get('traba_cod')
		    			}
					});
					Ext.getCmp('ctl_servicio_glosa').setValue('');
					ctl.servicio_store.reload({
						params: {
		    				traba_cod: record.get('traba_dni')
		    			}
					});
				}
			}
		},{
			xtype: 'panel',
			region: 'south',
			layout: 'border',
			height: 400,
			split: true,
			items: [{
				xtype: 'panel',
				title: 'Record Laboral',
				layout: 'border',
				region: 'west',
				width: 500,
				split: true,
				items: [{
					xtype: 'grid',
					id: 'ctl_planilla_grid',
					region: 'center',
					emptyText: 'No tiene periodos registrados',
					store: ctl.planilla_store,
					sortableColumns: false,
					enableColumnHide: false,
					columns:[
						{text:'Año', dataIndex:'plani_anio', width: 45},
						{text:'Mes', dataIndex:'plani_mes', width: 40},
						{text:'Planilla', dataIndex:'plani_num', width: 65},
						{text:'Reg.Lab.', dataIndex:'reglab_abrev', width: 75},
						{text:'Nemo', dataIndex:'nemo_cod', width: 50},
						{text:'DiasLab', dataIndex:'plani_traba_diaslab', width: 60},
						{text:'Bruto', dataIndex:'plani_traba_bruto', width: 70}
					],
					listeners:{
						select: function(ths, record, index, eOpts ) {
							Ext.getCmp('ctl_planilla_form').loadRecord(record);
						},
						rowdblclick: function(ths, record, tr, rowIndex, e, eOpts) {
							ctl.plani_traba_window(record);
						}
					}
				},{
					xtype: 'form',
					id: 'ctl_planilla_form',
					layout: 'form',
					region: 'south',
					height: 120,
					split: true,
					items: [{
						fieldLabel: 'Planilla',
						xtype: 'textfield',
						name: 'plani_num'
					},{
						fieldLabel: 'Descripcion',
						xtype: 'textfield',
						name: 'plani_titulo'
					},{
						fieldLabel: 'Nemonico',
						xtype: 'textfield',
						name: 'nemo_desc'
					}]
				}]
			},{
				xtype: 'panel',
				title: 'Servicios',
				layout: 'border',
				region: 'center',
				items: [{
					xtype: 'grid',
					id: 'ctl_servicio_grid',
					region: 'center',
					emptyText: 'No tiene servicios registrados',
					store: ctl.servicio_store,
					sortableColumns: false,
					enableColumnHide: false,
					columns:[
						{text:'Año', dataIndex:'os_anio', width: 50},
						{text:'Numero', dataIndex:'os_numero', width: 70},
						{text:'Fecha', dataIndex:'os_fecha', width: 80},
						{text:'Proveedor', dataIndex:'prove_desc', width: 200},
						{text:'Anulado', dataIndex:'os_anulado', width: 60},
						{text:'Total', dataIndex:'os_total', width: 70}
					],
					listeners:{
						select: function(ths, record, index, eOpts ) {
							Ext.getCmp('ctl_servicio_glosa').setValue(record.get('os_glosa'));
						}
					}
				},{
					xtype: 'panel',
					title: 'Servicio: Glosa',
					layout: 'border',
					region: 'south',
					height: 160,
					items: [{
						xtype: 'textarea',
						id: 'ctl_servicio_glosa',
						region: 'center',
						readOnly: true
					}]
				}]
			}]
		}]
	});

	ctl.reload_list = function () {
		ctl.main_store.reload();
	};
</script>